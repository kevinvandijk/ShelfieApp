# Customise this file, documentation can be found here:
# https://github.com/fastlane/fastlane/tree/master/fastlane/docs
# All available actions: https://github.com/fastlane/fastlane/blob/master/fastlane/docs/Actions.md
# can also be listed using the `fastlane actions` command

# Change the syntax highlighting to Ruby
# All lines starting with a # are ignored when running `fastlane`

# If you want to automatically update fastlane if a new version is available:
# update_fastlane

# This is the minimum version number required.
# Update this, if you use features of a newer version
fastlane_version "1.104.0"

default_platform :ios

platform :ios do
  before_all do
    ENV["SLACK_URL"] = "https://hooks.slack.com/services/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"


  end

  desc "Runs all the tests"
  lane :test do
    scan
  end

  desc "Submit a new Beta Build to Apple TestFlight"
  desc "This will also make sure the profile is up to date"
  lane :staging do
    # changelog = prompt(
    #   text: "Changelog (confirm by typing END and enter): ",
    #   multi_line_end_keyword: "END"
    # )
    # ensure_git_status_clean


    match(type: "appstore")

    # ensure_git_branch # Defaults to master
    increment_build_number(xcodeproj: "./ios/Shelfie.xcodeproj")
    # commit_version_bump(xcodeproj: "./ios/Shelfie.xcodeproj")
    # add_git_tag
    # push_to_git_remote

    # increment_build_number(
    #   xcodeproj: "./ios/Shelfie.xcodeproj"
    # )

    gym(
      scheme: "Shelfie",
      clean: true
    )
    # changelog_from_git_commits(
    #   include_merges: false
    # )
    testflight #(changelog: changelog)
  end

  desc "Create a development build"
  lane :dev do
    match(type: "development") # more information: https://codesigning.guide
    gym(scheme: "Shelfie", configuration: "Debug") # Build your app - more options available
    # pilot
    install_on_device(
      device_id: "c54125b9064b3d8fe0d396479e06c74f2592dad2",
      ipa: "./build/Shelfie.ipa"
    )

    # sh "your_script.sh"
    # You can also use other beta testing services here (run `fastlane actions`)
  end

  desc "Deploy a new version to the App Store"
  lane :release do
    # match(type: "appstore")
    # snapshot
    # gym(scheme: "Shelfie") # Build your app - more options available
    # deliver(force: true)
    # frameit
  end

  # You can define as many lanes as you want

  after_all do |lane|
    # This block is called, only if the executed lane was successful
    # say "Successfully finished deployment (#{lane})!"
    unless lane == :dev
      git_user = `git config user.name`
      slack(
        message: "*Shelfie iOS* deployed to *#{lane}* by #{git_user}"
      )
    end
  end

  error do |lane, exception|
    unless lane == :dev
      slack(
        message: exception.message,
        success: false
      )
    end
  end
end


# More information about multiple platforms in fastlane: https://github.com/fastlane/fastlane/blob/master/fastlane/docs/Platforms.md
# All available actions: https://github.com/fastlane/fastlane/blob/master/fastlane/docs/Actions.md

# fastlane reports which actions are used
# No personal data is recorded. Learn more at https://github.com/fastlane/enhancer
