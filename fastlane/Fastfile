# Customise this file, documentation can be found here:
# https://github.com/fastlane/fastlane/tree/master/fastlane/docs
# All available actions: https://github.com/fastlane/fastlane/blob/master/fastlane/docs/Actions.md
# can also be listed using the `fastlane actions` command

# Change the syntax highlighting to Ruby
# All lines starting with a # are ignored when running `fastlane`

# If you want to automatically update fastlane if a new version is available:
# update_fastlane

# This is the minimum version number required.
# Update this, if you use features of a newer version
fastlane_version "1.104.0"

default_platform :ios

opt_out_usage

platform :ios do
  before_all do
    ENV["SLACK_URL"] = "https://hooks.slack.com/services/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"
    ENV["SENTRY_TOKEN"] = "312ee38f31254c9dbb3be6929fa00c569eb16ac6e8dc454eaf3468917c36c60a"

  end

  desc "Runs all the tests"
  lane :test do
    # scan
    bla = get_version_number(xcodeproj: "./ios/Shelfie.xcodeproj")
    say bla
  end

  desc "Submit a new Beta Build to Apple TestFlight"
  desc "This will also make sure the profile is up to date"
  lane :beta do
    ENV["SENTRY_URL"] = "https://sentry.io/api/0/projects/shelfie/shelfieapp"

    changelog = prompt(
      text: "Changelog?",
      multi_line_end_keyword: "EOT"
    )

    if changelog.size == 0
      changelog = "Bug fixes and performance enhancements"
    end

    ensure_git_status_clean
    ensure_git_branch # Defaults to master

    match(type: "appstore")

    version_number = get_version_number(xcodeproj: "./ios/Shelfie.xcodeproj")
    build_number = latest_testflight_build_number(version: version_number) + 1
    full_version = "#{version_number}.#{build_number}"

    increment_build_number(
      xcodeproj: "./ios/Shelfie.xcodeproj",
      build_number: build_number
    )

    gym(
      scheme: "Shelfie",
      clean: true
    )

    # Create Sentry release
    if !system("../scripts/create-sentry-release.sh")
      raise "Could not create Sentry release for #{full_version}"
    end

    testflight(
      skip_waiting_for_build_processing: true,
      changelog: changelog
    )

    commit_version_bump(
      message: "Build #{full_version}",
      xcodeproj: "./ios/Shelfie.xcodeproj"
    )

    add_git_tag(
      build_number: full_version
    )

    push_to_git_remote
  end

  desc "Create a development build"
  lane :dev do
    match(type: "development") # more information: https://codesigning.guide
    gym(
      scheme: "Shelfie",
      configuration: "Debug",
      clean: true
    ) # Build your app - more options available
    # pilot
    install_on_device(
      device_id: "c54125b9064b3d8fe0d396479e06c74f2592dad2",
      ipa: "./build/Shelfie.ipa"
    )

    # sh "your_script.sh"
    # You can also use other beta testing services here (run `fastlane actions`)
  end

  desc "Deploy a new version to the App Store"
  lane :release do
    # match(type: "appstore")
    # snapshot
    # gym(scheme: "Shelfie") # Build your app - more options available
    # deliver(force: true)
    # frameit
  end

  # You can define as many lanes as you want

  after_all do |lane|
    # This block is called, only if the executed lane was successful
    # say "Successfully finished deployment (#{lane})!"
    unless lane == :dev
      git_user = `git config user.name`
      slack(
        message: "*Shelfie iOS* deployed to *#{lane}* by #{git_user}"
      )
    end
  end

  error do |lane, exception|
    unless lane == :dev
      slack(
        message: exception.message,
        success: false
      )
    end
  end
end


# More information about multiple platforms in fastlane: https://github.com/fastlane/fastlane/blob/master/fastlane/docs/Platforms.md
# All available actions: https://github.com/fastlane/fastlane/blob/master/fastlane/docs/Actions.md

# fastlane reports which actions are used
# No personal data is recorded. Learn more at https://github.com/fastlane/enhancer
