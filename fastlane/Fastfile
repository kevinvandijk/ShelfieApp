# Customise this file, documentation can be found here:
# https://github.com/fastlane/fastlane/tree/master/fastlane/docs
# All available actions: https://docs.fastlane.tools/actions
# can also be listed using the `fastlane actions` command

# Change the syntax highlighting to Ruby
# All lines starting with a # are ignored when running `fastlane`

# If you want to automatically update fastlane if a new version is available:
# update_fastlane

# This is the minimum version number required.
# Update this, if you use features of a newer version
fastlane_version "2.9.0"

default_platform :ios

opt_out_usage

platform :ios do
  before_all do
    ENV["SLACK_URL"] = "https://hooks.slack.com/services/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"
    ENV["SENTRY_TOKEN"] = "312ee38f31254c9dbb3be6929fa00c569eb16ac6e8dc454eaf3468917c36c60a"
  end

  desc "Submit a new Beta Build to Apple TestFlight"
  desc "This will also make sure the profile is up to date"
  lane :beta do
    # Overwrite React Native bundling script
    if !system("../scripts/setup-react-native-bundler.sh")
      raise "Could not overwrite react-native bundler script"
    end

    ENV["SENTRY_URL"] = "https://sentry.io/api/0/projects/shelfie/shelfieapp"

    # changelog = prompt(
    #   text: "Changelog?",
    #   multi_line_end_keyword: "EOT"
    # )
    #
    # if changelog.size == 0
    #   changelog = "Bug fixes and performance enhancements"
    # end

    ensure_git_status_clean
    # TODO: beta release track branch
    ensure_git_branch

    match(type: "appstore")

    version_number = get_version_number(xcodeproj: "./ios/Shelfie.xcodeproj")
    build = latest_testflight_build_number(version: version_number)
    full_version = "#{version_number}.#{build}"

    increment_build_number(
      xcodeproj: "./ios/Shelfie.xcodeproj",
      build_number: "#{build}"
    )

    gym(
      scheme: "Shelfie",
      clean: true
    )

    # # Create Run codepush script, which will also create a Sentry release
    # if !system("../scripts/code-push.sh")
    #   raise "Codepush release failed for #{full_version}"
    # end
    #
    testflight(
      # changelog: changelog,
      skip_waiting_for_build_processing: true
    )

    commit_version_bump(
      message: "Build #{full_version}",
      xcodeproj: "./ios/Shelfie.xcodeproj"
    )

    add_git_tag(
      build_number: full_version
    )

    push_to_git_remote
  end
  #
  # desc "Deploy a new version to the App Store"
  # lane :release do
  #   # match(type: "appstore")
  #   # snapshot
  #   gym(scheme: "Shelfie") # Build your app - more options available
  #   deliver(force: true)
  #   # frameit
  # end

  # You can define as many lanes as you want

  # after_all do |lane|
  #   unless lane == :dev
  #     git_user = `git config user.name`
  #     slack(
  #       message: "*Shelfie iOS* deployed to *#{lane}* by #{git_user}"
  #     )
  #   end
  # end

  # error do |lane, exception|
  #   unless lane == :dev
  #     slack(
  #       message: exception.message,
  #       success: false
  #     )
  #   end
  # end
end


# More information about multiple platforms in fastlane: https://github.com/fastlane/fastlane/blob/master/fastlane/docs/Platforms.md
# All available actions: https://docs.fastlane.tools/actions

# fastlane reports which actions are used
# No personal data is recorded. Learn more at https://github.com/fastlane/enhancer
